#Initialize the replica sets (config servers and shards)

docker compose exec configsvr01 bash "/scripts/init-configserver.js"

docker compose exec shard01-a bash "/scripts/init-shard01.js"
docker compose exec shard02-a bash "/scripts/init-shard02.js"
docker compose exec shard03-a bash "/scripts/init-shard03.js"


#Initializing the router
docker compose exec router01 sh -c "mongosh < /scripts/init-router.js"



#Setup authentication
docker compose exec configsvr01 bash "/scripts/auth.js"

docker compose exec shard01-a bash "/scripts/auth.js"
docker compose exec shard02-a bash "/scripts/auth.js"
docker compose exec shard03-a bash "/scripts/auth.js"


#Enable sharding on the database
docker compose exec router01 mongosh --port 27017 -u "your_admin" --authenticationDatabase admin --password "your_password"

# // Enable sharding for database `MyDatabase`
# sh.enableSharding("MyDatabase")

# // Setup shardingKey for collection `MyCollection`**
# db.adminCommand( { shardCollection: "MyDatabase.MyCollection", key: { oemNumber: "hashed", zipCode: 1, supplierId: 1 } } )


#Login
# mongodb://your_admin:your_password@127.0.0.1:27117,127.0.0.1:27118/?authMechanism=DEFAULT